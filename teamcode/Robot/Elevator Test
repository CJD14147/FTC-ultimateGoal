package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.robot.Robot;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.util.ElapsedTime;

import org.firstinspires.ftc.robotcore.external.navigation.Position;

import java.util.Locale;
//import android.graphics.Color;
import org.firstinspires.ftc.robotcore.external.navigation.DistanceUnit;
import org.firstinspires.ftc.teamcode.Hardware;

import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;

@TeleOp(name = "Elevator Test", group = "Tele")

public class Elevator_Test extends LinearOpMode {
    Hardware robot = new Hardware();
    private ElapsedTime runtime = new ElapsedTime();

    @Override
    public void runOpMode() {

        robot.init(hardwareMap);
        sleep(500);



//        robot.hand.setPosition(0);
//        robot.wrist.setPosition(0.3);
//        robot.elbow.setPosition(0.9);
//        robot.shoulder.setPosition(0.65);

        waitForStart();
        runtime.reset();
        robot.resetAngle();
        robot.reset();
        while (opModeIsActive()) {


                //////////////////////////// DRIVER 1 ------------------ DRIVER 1 //////////////////////





                //////////////////////////// DRIVER 2 ------------------ DRIVER 2 /////////////////////




                ///////////////////////////Intake//////////////////////////////

    //            if (gamepad2.right_bumper) {
    //                if (intakeIsTrue) {
    //                    robot.intake.setPower(1);
    //                    intakeIsTrue = false;
    //                } else {
    //                    robot.intake.setPower(-1);
    //                    intakeIsTrue = true;
    //                }
    //                sleep(200);
    //            }

    //

//                ////off and up
//                if (robot.elevator.getCurrentPosition() > 500) {
//                    robot.intake.setPower(0);
//                }
//
//                //// outake and mid
//                if (robot.elevator.getCurrentPosition() > 200 && robot.elevator.getCurrentPosition() < 500) {
//                    robot.intake.setPower(1);
//                }
//
//                //intake and down
//                if (robot.elevator.getCurrentPosition() < 200){
//                    robot.intake.setPower(-1);
//                }


                //////////////// Elevator/////////////////

    //            if (gamepad2.left_stick_y > Math.abs(0.2)) {
    //                    robot.elevator.setPower(gamepad2.left_stick_y);
    //            }

                //   || robot.elevator.getCurrentPosition() == 760
                if (gamepad2.left_stick_y > Math.abs(0.2)) {
                    while (robot.elevator.getCurrentPosition() < 755) {
                        robot.elevator.setPower(gamepad2.left_stick_y);
                    }
                    robot.elevator.setPower(0.35);
                }

                if (gamepad2.left_stick_y < Math.abs(0.2)) {
                    while (robot.elevator.getCurrentPosition() > 70) {
                        robot.elevator.setPower(gamepad2.left_stick_y);
                    }
                    robot.elevator.setPower(0.35);
                }


                /////////////////// Shoulder //////////////////////////
                if (gamepad2.dpad_right) {
                    robot.shoulder.setPosition(0.66);
                }

                if (gamepad2.dpad_left) {
                    robot.shoulder.setPosition(0);
                }




                //telemetry.addData("Shooter Velocity:", robot.shooter.getVelocity());
                telemetry.addData("Elevator Encoder Position:", robot.elevator.getCurrentPosition());
               // telemetry.addData("Right Encoder Position:", robot.fr.getCurrentPosition());
               // telemetry.addData("Left Encoder Position:", robot.fl.getCurrentPosition());
                //telemetry.addData("Horizontal Encoder Position:", robot.br.getCurrentPosition());
                telemetry.update();


        }
    }
}



